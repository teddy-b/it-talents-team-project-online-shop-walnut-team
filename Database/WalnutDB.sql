-- MySQL Script generated by MySQL Workbench
-- 01/29/16 17:57:42
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema WalnutDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema WalnutDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `WalnutDB` ;
USE `WalnutDB` ;

-- -----------------------------------------------------
-- Table `WalnutDB`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`Users` (
  `id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalnutDB`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`Categories` (
  `id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalnutDB`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`Products` (
  `id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `category` INT(11) UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `info` TEXT NOT NULL,
  `picture` VARCHAR(50) NOT NULL,
  `price` DOUBLE UNSIGNED NOT NULL,
  `rating` DOUBLE UNSIGNED NULL,
  PRIMARY KEY (`id`, `category`),
  INDEX `fk_Products_Categories_idx` (`category` ASC),
  CONSTRAINT `fk_Products_Categories`
    FOREIGN KEY (`category`)
    REFERENCES `WalnutDB`.`Categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalnutDB`.`Attributes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`Attributes` (
  `id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `category` INT(11) UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `category`),
  INDEX `fk_Attributes_Categories1_idx` (`category` ASC),
  CONSTRAINT `fk_Attributes_Categories1`
    FOREIGN KEY (`category`)
    REFERENCES `WalnutDB`.`Categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalnutDB`.`ProductAttributes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`ProductAttributes` (
  `product` INT(11) UNSIGNED NOT NULL,
  `attribute` INT(11) UNSIGNED NOT NULL,
  `value` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`product`, `attribute`),
  INDEX `fk_ProductAttributes_Attributes1_idx` (`attribute` ASC),
  CONSTRAINT `fk_ProductAttributes_Products1`
    FOREIGN KEY (`product`)
    REFERENCES `WalnutDB`.`Products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProductAttributes_Attributes1`
    FOREIGN KEY (`attribute`)
    REFERENCES `WalnutDB`.`Attributes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalnutDB`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`Orders` (
  `id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `user` INT(11) UNSIGNED NOT NULL,
  `orderDate` DATE NOT NULL,
  `deliveryDate` DATE NULL,
  PRIMARY KEY (`id`, `user`),
  INDEX `fk_Orders_Users1_idx` (`user` ASC),
  CONSTRAINT `fk_Orders_Users1`
    FOREIGN KEY (`user`)
    REFERENCES `WalnutDB`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalnutDB`.`OrderedItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`OrderedItems` (
  `order` INT(11) UNSIGNED NOT NULL,
  `product` INT(11) UNSIGNED NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`order`, `product`),
  INDEX `fk_OrderedItems_Products1_idx` (`product` ASC),
  CONSTRAINT `fk_OrderedItems_Orders1`
    FOREIGN KEY (`order`)
    REFERENCES `WalnutDB`.`Orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrderedItems_Products1`
    FOREIGN KEY (`product`)
    REFERENCES `WalnutDB`.`Products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalnutDB`.`Marked`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`Marked` (
  `user` INT(11) UNSIGNED NOT NULL,
  `product` INT(11) UNSIGNED NOT NULL,
  PRIMARY KEY (`user`, `product`),
  INDEX `fk_Users_has_Products_Products1_idx` (`product` ASC),
  INDEX `fk_Users_has_Products_Users1_idx` (`user` ASC),
  CONSTRAINT `fk_Users_has_Products_Users1`
    FOREIGN KEY (`user`)
    REFERENCES `WalnutDB`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Products_Products1`
    FOREIGN KEY (`product`)
    REFERENCES `WalnutDB`.`Products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalnutDB`.`Deals`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalnutDB`.`Deals` (
  `product` INT(11) UNSIGNED NOT NULL,
  `newPrice` DOUBLE UNSIGNED NOT NULL,
  PRIMARY KEY (`product`),
  CONSTRAINT `fk_Deals_Products1`
    FOREIGN KEY (`product`)
    REFERENCES `WalnutDB`.`Products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
